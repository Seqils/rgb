{"ast":null,"code":"var _jsxFileName = \"/home/ndonkov/snap/go/rgb/assets/src/components/Posts/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\nimport PostForm from \"./PostForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = props => {\n  _s();\n\n  const [editing, setEditing] = useState(false);\n  const [errors, setErrors] = useState({});\n  const authContext = useContext(AuthContext);\n\n  const switchModeHandler = () => {\n    setEditing(prevState => !prevState);\n    setErrors({});\n  };\n\n  async function deleteHandler() {\n    try {\n      const response = await fetch('api/posts/' + props.post.ID, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': 'Bearer ' + authContext.token\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        let errorText = 'Failed to add new post.';\n\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n\n        if (typeof data['error'] === 'string') {\n          setErrors({\n            'unknown': data['error']\n          });\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        props.onDeletePost(props.post.ID);\n      }\n    } catch (error) {\n      setErrors({\n        \"error\": error.message\n      });\n    }\n  }\n\n  ;\n\n  const editPostHandler = () => {\n    setEditing(false);\n    props.onEditPost();\n  };\n\n  const cardTitle = editing ? 'Edit post' : props.post.Title;\n  const cardBody = editing ? /*#__PURE__*/_jsxDEV(PostForm, {\n    post: props.post,\n    onEditPost: editPostHandler,\n    editing: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 30\n  }, this) : props.post.Content;\n  const switchModeButtonText = editing ? 'Cancel' : 'Edit';\n  const cardButtons = editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-link\",\n      onClick: switchModeHandler,\n      children: switchModeButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger float-right mx-3\",\n      onClick: deleteHandler,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-link\",\n      onClick: switchModeHandler,\n      children: switchModeButtonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-danger float-right mx-3\",\n      onClick: deleteHandler,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-5 pb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: cardTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: cardBody\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), cardButtons, errorContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"KKoDUcmuaYZI25Btl5RVxjXwqqU=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/ndonkov/snap/go/rgb/assets/src/components/Posts/Post.js"],"names":["useState","useContext","AuthContext","Errors","PostForm","Post","props","editing","setEditing","errors","setErrors","authContext","switchModeHandler","prevState","deleteHandler","response","fetch","post","ID","method","headers","token","data","json","ok","errorText","hasOwnProperty","Error","onDeletePost","error","message","editPostHandler","onEditPost","cardTitle","Title","cardBody","Content","switchModeButtonText","cardButtons","errorContent","Object","keys","length"],"mappings":"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","sourcesContent":["import { useState, useContext } from 'react';\n\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\nimport PostForm from \"./PostForm\";\n\nconst Post = (props) => {\n  const [editing, setEditing] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  const authContext = useContext(AuthContext);\n\n  const switchModeHandler = () => {\n    setEditing((prevState) => !prevState);\n    setErrors({});\n  };\n\n  async function deleteHandler() {\n    try {\n      const response = await fetch('api/posts/' + props.post.ID,\n        {\n          method: 'DELETE',\n          headers: {\n            'Authorization': 'Bearer ' + authContext.token,\n          },\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = 'Failed to add new post.';\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n        if ((typeof data['error'] === 'string')) {\n          setErrors({ 'unknown': data['error'] })\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        props.onDeletePost(props.post.ID);\n      }\n    } catch (error) {\n      setErrors({ \"error\": error.message });\n    }\n  };\n\n  const editPostHandler = () => {\n    setEditing(false);\n    props.onEditPost();\n  }\n\n  const cardTitle = editing ? 'Edit post' : props.post.Title;\n  const cardBody = editing ? <PostForm post={props.post} onEditPost={editPostHandler} editing={true}/> : props.post.Content;\n  const switchModeButtonText = editing ? 'Cancel' : 'Edit';\n  const cardButtons = editing ?\n    <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-link\" onClick={switchModeHandler}>{switchModeButtonText}</button>\n      <button type=\"button\" className=\"btn btn-danger float-right mx-3\" onClick={deleteHandler}>Delete</button>\n    </div>\n    :\n    <div className=\"container\">\n      <button type=\"button\" className=\"btn btn-link\" onClick={switchModeHandler}>{switchModeButtonText}</button>\n      <button type=\"button\" className=\"btn btn-danger float-right mx-3\" onClick={deleteHandler}>Delete</button>\n    </div>\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n\n  return (\n    <div className=\"card mb-5 pb-2\">\n      <div className=\"card-header\">{cardTitle}</div>\n      <div className=\"card-body\">{cardBody}</div>\n      {cardButtons}\n      {errorContent}\n    </div>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}