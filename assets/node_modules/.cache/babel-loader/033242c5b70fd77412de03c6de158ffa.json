{"ast":null,"code":"var _jsxFileName = \"/home/ndonkov/snap/go/rgb/assets/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n  const authContext = useContext(AuthContext);\n  const [loggingIn, setLoggingIn] = useState(true);\n  const [errors, setErrors] = useState({});\n\n  const switchModeHandler = () => {\n    setLoggingIn(prevState => !prevState);\n    setErrors({});\n  };\n\n  const endpoint = loggingIn ? '/api/signin' : '/api/signup';\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    setErrors({});\n    const usernameValue = usernameRef.current.value;\n    const passwordValue = passwordRef.current.value;\n\n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        body: JSON.stringify({\n          Username: usernameValue,\n          Password: passwordValue\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        let errorText = loggingIn ? 'Login failed' : 'Sign up failed';\n\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n\n        if (typeof data['error'] === 'string') {\n          setErrors({\n            'unknown': data['error']\n          });\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        authContext.login(data.jwt);\n        history.replace('/');\n      }\n    } catch (error) {\n      setErrors({\n        \"error\": error.message\n      });\n    }\n  }\n\n  ;\n  const header = loggingIn ? 'Login' : 'Sign up';\n  const mainButtonText = loggingIn ? 'Login' : 'Create account';\n  const switchModeButtonText = loggingIn ? 'Create new account' : 'Login with existing account';\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container w-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group pb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"username\",\n            type: \"text\",\n            className: \"form-control\",\n            required: true,\n            ref: usernameRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group pb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: \"password\",\n            className: \"form-control\",\n            required: true,\n            ref: passwordRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-3 d-flex justify-content-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-success\",\n            children: mainButtonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-link\",\n            onClick: switchModeHandler,\n            children: switchModeButtonText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), errorContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"P0vsgYGqWnymnvSolTPRI9Sq/oo=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/ndonkov/snap/go/rgb/assets/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","useHistory","AuthContext","Errors","AuthForm","history","usernameRef","passwordRef","authContext","loggingIn","setLoggingIn","errors","setErrors","switchModeHandler","prevState","endpoint","submitHandler","event","preventDefault","usernameValue","current","value","passwordValue","response","fetch","method","body","JSON","stringify","Username","Password","headers","data","json","ok","errorText","hasOwnProperty","Error","login","jwt","replace","error","message","header","mainButtonText","switchModeButtonText","errorContent","Object","keys","length"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from '../../store/auth-context';\nimport Errors from '../Errors/Errors';\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const usernameRef = useRef();\n  const passwordRef = useRef();\n\n  const authContext = useContext(AuthContext);\n\n  const [loggingIn, setLoggingIn] = useState(true);\n  const [errors, setErrors] = useState({});\n\n  const switchModeHandler = () => {\n    setLoggingIn((prevState) => !prevState);\n    setErrors({});\n  };\n\n  const endpoint = loggingIn ? '/api/signin' : '/api/signup'\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    setErrors({});\n\n    const usernameValue = usernameRef.current.value;\n    const passwordValue = passwordRef.current.value;\n\n    try {\n      const response = await fetch(endpoint,\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            Username: usernameValue,\n            Password: passwordValue,\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        let errorText = loggingIn ? 'Login failed' : 'Sign up failed';\n        if (!data.hasOwnProperty('error')) {\n          throw new Error(errorText);\n        }\n        if ((typeof data['error'] === 'string')) {\n          setErrors({'unknown': data['error']})\n        } else {\n          setErrors(data['error']);\n        }\n      } else {\n        authContext.login(data.jwt)\n        history.replace('/');\n      }\n    } catch (error) {\n      setErrors({\"error\": error.message});\n    }\n  };\n\n  const header = loggingIn ? 'Login' : 'Sign up';\n  const mainButtonText = loggingIn ? 'Login' : 'Create account';\n  const switchModeButtonText = loggingIn ? 'Create new account' : 'Login with existing account';\n  const errorContent = Object.keys(errors).length === 0 ? null : Errors(errors);\n\n  return (\n    <section>\n      <h1 className=\"text-center\">{header}</h1>\n      <div className=\"container w-50\">\n        <form onSubmit={submitHandler}>\n          <div className=\"form-group pb-3\">\n            <label htmlFor=\"username\">Username</label>\n            <input id=\"username\" type=\"text\" className=\"form-control\" required ref={usernameRef} ></input>\n          </div>\n          <div className=\"form-group pb-3\">\n            <label htmlFor=\"password\">Password</label>\n            <input id=\"password\" type=\"password\" className=\"form-control\" required ref={passwordRef} ></input>\n          </div>\n          <div className=\"pt-3 d-flex justify-content-between\">\n            <button type=\"submit\" className=\"btn btn-success\">{mainButtonText}</button>\n            <button type=\"button\" className=\"btn btn-link\" onClick={switchModeHandler}>{switchModeButtonText}</button>\n          </div>\n        </form>\n        {errorContent}\n      </div>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}